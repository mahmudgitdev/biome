{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\JobNewsDetails.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { COLORS, SIZES } from \"../constants\";\nimport jobNewsApi from \"../api/jobnews\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport HTML from \"react-native-render-html\";\n\nvar jobNewsDetails = function jobNewsDetails(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var id = route.params.id;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleCircular = _useState4[0],\n      setSingleCircular = _useState4[1];\n\n  var loadSingleCircular = function loadSingleCircular() {\n    var _await$jobNewsApi$get, data;\n\n    return _regeneratorRuntime.async(function loadSingleCircular$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(jobNewsApi.get(\"/get-single-circular/\" + id));\n\n          case 2:\n            _await$jobNewsApi$get = _context.sent;\n            data = _await$jobNewsApi$get.data;\n            setSingleCircular(data);\n            setLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadSingleCircular();\n  }, [0]);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      style: {\n        paddingVertical: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Vacancy : \", item.vacancy), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Responsibilities : \"), React.createElement(HTML, {\n      source: {\n        html: item.responsibilities\n      },\n      contentWidth: SIZES.width,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Requirement : \"), React.createElement(HTML, {\n      source: {\n        html: item.requirement\n      },\n      contentWidth: SIZES.width,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"Location : \", item.location), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Salary : \", item.salary));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    style: {\n      justifyContent: 'center',\n      alignSelf: 'center',\n      flex: 1\n    },\n    size: \"large\",\n    color: COLORS.yellow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }\n  }) : React.createElement(View, {\n    style: {\n      paddingHorizontal: 10,\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: COLORS.darkgreen\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, singleCircular.title), React.createElement(Text, {\n    style: {\n      fontSize: 14,\n      fontWeight: 'bold',\n      color: COLORS.gray\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Company : \", singleCircular.company), React.createElement(FlatList, {\n    data: singleCircular.details,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    renderItem: renderItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray,\n    height: SIZES.height\n  }\n});\nexport default jobNewsDetails;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/JobNewsDetails.js"],"names":["React","useState","useEffect","COLORS","SIZES","jobNewsApi","FlatList","HTML","jobNewsDetails","route","navigation","id","params","loading","setLoading","singleCircular","setSingleCircular","loadSingleCircular","get","data","renderItem","item","paddingVertical","vacancy","html","responsibilities","width","requirement","location","salary","styles","container","justifyContent","alignSelf","flex","yellow","paddingHorizontal","fontSize","fontWeight","color","darkgreen","title","gray","company","details","_id","StyleSheet","create","backgroundColor","lightGray","height"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport{\r\nText,\r\nView,\r\nStyleSheet,\r\nActivityIndicator\r\n} from 'react-native';\r\nimport {COLORS,SIZES} from '../constants';\r\nimport jobNewsApi from '../api/jobnews';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nimport HTML from \"react-native-render-html\";\r\n\r\nconst jobNewsDetails = ({route,navigation})=>{\r\n\r\n  const {id} = route.params;\r\n  const [loading,setLoading] = useState(true);\r\n  const [singleCircular,setSingleCircular] = useState({});\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const loadSingleCircular = async ()=>{\r\n        const {data} = await jobNewsApi.get(`/get-single-circular/${id}`);\r\n        setSingleCircular(data);\r\n        setLoading(false);\r\n    }\r\n    useEffect(() => {\r\n      loadSingleCircular();\r\n    }, [0])\r\n\r\n\r\n    const renderItem = ({item})=>{\r\n\r\n        return(\r\n            <View style={{paddingVertical:15}}>\r\n                <Text>Vacancy : {item.vacancy}</Text>\r\n                <Text>Responsibilities : </Text>\r\n                <HTML source={{ html: item.responsibilities }} contentWidth={SIZES.width} />\r\n                <View>\r\n                <Text>Requirement : </Text>\r\n                <HTML source={{ html: item.requirement }} contentWidth={SIZES.width} />\r\n                </View>\r\n                <Text>Location : {item.location}</Text>\r\n                <Text>Salary : {item.salary}</Text>\r\n            </View>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            {loading?<ActivityIndicator \r\n            style={{justifyContent:'center',alignSelf:'center',flex:1}} \r\n            size=\"large\" color={COLORS.yellow} \r\n            /> : <View style={{paddingHorizontal:10,paddingVertical:10}}>\r\n                <View>\r\n                    <Text style={{fontSize:20,fontWeight:'bold',color:COLORS.darkgreen}}>{singleCircular.title}</Text>\r\n                    <Text style={{fontSize:14,fontWeight:'bold',color:COLORS.gray}}>Company : {singleCircular.company}</Text>\r\n                    <FlatList \r\n                    data={singleCircular.details}\r\n                    keyExtractor={item=>item._id}\r\n                    renderItem={renderItem}\r\n                    />\r\n                </View>\r\n            </View>}\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor:COLORS.lightGray,\r\n        height:SIZES.height\r\n    }\r\n})\r\n\r\nexport default jobNewsDetails;"]},"metadata":{},"sourceType":"module"}