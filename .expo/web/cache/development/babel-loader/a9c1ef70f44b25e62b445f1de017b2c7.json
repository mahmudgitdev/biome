{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\components\\\\Categories.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { icons, COLORS, SIZES } from \"../constants\";\nimport { categories } from \"../localdata/data\";\n\nvar Categories = function Categories() {\n  var categoryListHeightAnimationValue = useRef(new Animated.Value(125)).current;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCategory = _useState2[0],\n      setSelectedCategory = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showMoreToggle = _useState4[0],\n      setShowMoreToggle = _useState4[1];\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setSelectedCategory(item);\n      },\n      style: _objectSpread({\n        flex: 1,\n        flexDirection: 'column',\n        margin: 5,\n        paddingVertical: SIZES.radius,\n        paddingHorizontal: SIZES.padding,\n        borderRadius: 5,\n        backgroundColor: COLORS.white,\n        justifyContent: 'center',\n        alignItems: 'center'\n      }, styles.shadow),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      source: item.icon,\n      style: {\n        width: 30,\n        height: 30\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        marginLeft: SIZES.base,\n        color: COLORS.primary,\n        alignSelf: 'center',\n        justifyContent: 'center',\n        fontSize: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, item.name));\n  };\n\n  return React.createElement(View, {\n    style: {\n      paddingHorizontal: SIZES.padding - 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      height: categoryListHeightAnimationValue\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: categories,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    numColumns: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      marginVertical: SIZES.base,\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      if (showMoreToggle) {\n        Animated.timing(categoryListHeightAnimationValue, {\n          toValue: 125,\n          duration: 500,\n          useNativeDriver: false\n        }).start();\n      } else {\n        Animated.timing(categoryListHeightAnimationValue, {\n          toValue: 187.5,\n          duration: 500,\n          useNativeDriver: false\n        }).start();\n      }\n\n      setShowMoreToggle(!showMoreToggle);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, showMoreToggle ? \"LESS\" : \"MORE\"), React.createElement(Image, {\n    source: showMoreToggle ? icons.up_arrow : icons.down_arrow,\n    style: {\n      marginLeft: 5,\n      width: 15,\n      height: 15,\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 3\n  }\n});\nexport default Categories;","map":{"version":3,"sources":["L:/ReactNative/biome/src/components/Categories.js"],"names":["React","useState","useRef","icons","COLORS","SIZES","categories","Categories","categoryListHeightAnimationValue","Animated","Value","current","selectedCategory","setSelectedCategory","showMoreToggle","setShowMoreToggle","renderItem","item","flex","flexDirection","margin","paddingVertical","radius","paddingHorizontal","padding","borderRadius","backgroundColor","white","justifyContent","alignItems","styles","shadow","icon","width","height","marginLeft","base","color","primary","alignSelf","fontSize","name","id","marginVertical","timing","toValue","duration","useNativeDriver","start","up_arrow","down_arrow","StyleSheet","create","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{ useState, useRef } from 'react';\r\nimport{\r\n    Image, \r\n    SafeAreaView, \r\n    Text, \r\n    View,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    FlatList,\r\n    Animated,\r\n    StyleSheet\r\n} from 'react-native';\r\n\r\nimport {icons,COLORS,SIZES} from '../constants';\r\nimport {categories} from '../localdata/data';\r\n\r\nconst Categories = () =>{\r\n\r\n    const categoryListHeightAnimationValue = useRef(new Animated.Value(125)).current;\r\n    const [selectedCategory, setSelectedCategory] = useState(null)\r\n    const [showMoreToggle, setShowMoreToggle] = useState(false)\r\n\r\n    const renderItem = ({ item }) => (\r\n        <TouchableOpacity\r\n            onPress={() => setSelectedCategory(item)}\r\n            style={{\r\n                flex: 1,\r\n                flexDirection: 'column',\r\n                margin: 5,\r\n                paddingVertical: SIZES.radius,\r\n                paddingHorizontal: SIZES.padding,\r\n                borderRadius: 5,\r\n                backgroundColor: COLORS.white,\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                ...styles.shadow\r\n            }}\r\n        >\r\n            <Image\r\n                source={item.icon}\r\n                style={{\r\n                    width: 30,\r\n                    height: 30\r\n                }}\r\n            />\r\n            <Text style={{ marginLeft: SIZES.base, color: COLORS.primary,alignSelf:'center',\r\n        justifyContent:'center',fontSize:12 }}>{item.name}</Text>\r\n        </TouchableOpacity>\r\n    )\r\n\r\n    return (\r\n        <View style={{ paddingHorizontal: SIZES.padding - 5 }}>\r\n            <Animated.View style={{ height: categoryListHeightAnimationValue }}>\r\n                <FlatList\r\n                    data={categories}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => `${item.id}`}\r\n                    numColumns={2}\r\n                />\r\n            </Animated.View>\r\n\r\n            <TouchableOpacity\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    marginVertical: SIZES.base,\r\n                    justifyContent: 'center'\r\n                }}\r\n                onPress={() => {\r\n                    if (showMoreToggle) {\r\n                        Animated.timing(categoryListHeightAnimationValue, {\r\n                            toValue: 125,\r\n                            duration: 500,\r\n                            useNativeDriver: false\r\n                        }).start()\r\n                    } else {\r\n                        Animated.timing(categoryListHeightAnimationValue, {\r\n                            toValue: 187.5,\r\n                            duration: 500,\r\n                            useNativeDriver: false\r\n                        }).start()\r\n                    }\r\n\r\n                    setShowMoreToggle(!showMoreToggle)\r\n                }}\r\n            >\r\n                <Text>{showMoreToggle ? \"LESS\" : \"MORE\"}</Text>\r\n                <Image\r\n                    source={showMoreToggle ? icons.up_arrow : icons.down_arrow}\r\n                    style={{ marginLeft: 5, width: 15, height: 15, alignSelf: 'center' }}\r\n                />\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 2,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 3,\r\n    }\r\n})\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}