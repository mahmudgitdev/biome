{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport globalContextCreator from \"../context/globalContextCreator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nvar initialState = {\n  count: 0\n};\n\nvar favoriteReducer = function favoriteReducer(state, actions) {\n  switch (actions.type) {\n    case 'SET_FAVORITE':\n      setToStorage(actions.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: actions.payload\n      });\n\n    case 'GET_FAVORITE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favoriteId: actions.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar updateFavorite = function updateFavorite(dispatch) {\n  return function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: 'UPDATE_FAVORITE',\n              payload: 1\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _globalContextCreator = globalContextCreator(favoriteReducer, {\n  setToFavorite: setToFavorite\n}, initialState),\n    Context = _globalContextCreator.Context,\n    Provider = _globalContextCreator.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["L:/ReactNative/biome/src/context/FavoriteContext.js"],"names":["globalContextCreator","AsyncStorage","initialState","count","favoriteReducer","state","actions","type","setToStorage","payload","favoriteId","updateFavorite","dispatch","setToFavorite","Context","Provider"],"mappings":";;;;;;;AAAA,OAAOA,oBAAP;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC;AADW,CAArB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAOC,OAAP,EAAiB;AACrC,UAAOA,OAAO,CAACC,IAAf;AACI,SAAK,cAAL;AACIC,MAAAA,YAAY,CAACF,OAAO,CAACG,OAAT,CAAZ;AACA,6CACOJ,KADP;AAEIF,QAAAA,KAAK,EAACG,OAAO,CAACG;AAFlB;;AAIJ,SAAK,cAAL;AACI,6CACOJ,KADP;AAEIK,QAAAA,UAAU,EAAEJ,OAAO,CAACG;AAFxB;;AAKJ;AACI,aAAOJ,KAAP;AAdR;AAiBH,CAlBD;;AAoBA,IAAMM,cAAc,GAAI,SAAlBA,cAAkB,CAACC,QAAD,EAAa;AACjC,SAAO;AAAA;AAAA;AAAA;AAAA;AACNA,YAAAA,QAAQ,CAAC;AACLL,cAAAA,IAAI,EAAC,iBADA;AAELE,cAAAA,OAAO,EAAC;AAFH,aAAD,CAAR;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMF,CAPF;;4BAQmCT,oBAAoB,CAACI,eAAD,EAAiB;AAACS,EAAAA,aAAa,EAAbA;AAAD,CAAjB,EAAiCX,YAAjC,C;IAAxCY,O,yBAAAA,O;IAAQC,Q,yBAAAA,Q","sourcesContent":["import globalContextCreator from '../context/globalContextCreator';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nconst initialState = {\r\n    count:0\r\n}\r\n\r\nconst favoriteReducer = (state,actions)=>{\r\n    switch(actions.type){\r\n        case 'SET_FAVORITE':\r\n            setToStorage(actions.payload);\r\n            return{\r\n                ...state,\r\n                count:actions.payload\r\n            }\r\n        case 'GET_FAVORITE':\r\n            return{\r\n                ...state,\r\n                favoriteId: actions.payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nconst updateFavorite =  (dispatch) =>{\r\n    return async ()=>{\r\n     dispatch({\r\n         type:'UPDATE_FAVORITE',\r\n         payload:1\r\n        });\r\n    };\r\n }\r\n export const {Context,Provider} = globalContextCreator(favoriteReducer,{setToFavorite},initialState);"]},"metadata":{},"sourceType":"module"}