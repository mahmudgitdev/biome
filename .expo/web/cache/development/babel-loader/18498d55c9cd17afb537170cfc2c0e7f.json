{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport globalContextCreator from \"../context/globalContextCreator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nvar initialState = {\n  favoriteId: []\n};\n\nvar setToStorage = function setToStorage() {\n  return _regeneratorRuntime.async(function setToStorage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('favorites::id', JSON.stringify(favoriteId)));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar favoriteReducer = function favoriteReducer(state, actions) {\n  switch (actions.type) {\n    case 'SET_FAVORITE':\n      setToStorage();\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favoriteId: [].concat(_toConsumableArray(state.favoriteId), [actions.payload])\n      });\n\n    case 'GET_FAVORITE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        favoriteId: actions.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar setToFavorite = function setToFavorite(dispatch) {\n  return function _callee(id) {\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: 'SET_FAVORITE',\n              payload: id\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nvar _globalContextCreator = globalContextCreator(favoriteReducer, {\n  setToFavorite: setToFavorite\n}, initialState),\n    Context = _globalContextCreator.Context,\n    Provider = _globalContextCreator.Provider;\n\nexport { Context, Provider };","map":{"version":3,"sources":["L:/ReactNative/biome/src/context/FavoriteContext.js"],"names":["globalContextCreator","AsyncStorage","initialState","favoriteId","setToStorage","setItem","JSON","stringify","console","log","favoriteReducer","state","actions","type","payload","setToFavorite","dispatch","id","Context","Provider"],"mappings":";;;;;;;;AAAA,OAAOA,oBAAP;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC;AADM,CAArB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEPH,YAAY,CAACI,OAAb,CAAqB,eAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAArC,CAFO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIbK,UAAAA,OAAO,CAACC,GAAR;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAOC,OAAP,EAAiB;AACrC,UAAOA,OAAO,CAACC,IAAf;AACI,SAAK,cAAL;AACIT,MAAAA,YAAY;AACZ,6CACOO,KADP;AAEIR,QAAAA,UAAU,+BAAKQ,KAAK,CAACR,UAAX,IAAsBS,OAAO,CAACE,OAA9B;AAFd;;AAIJ,SAAK,cAAL;AACI,6CACOH,KADP;AAEIR,QAAAA,UAAU,EAAES,OAAO,CAACE;AAFxB;;AAKJ;AACI,aAAOH,KAAP;AAdR;AAiBH,CAlBD;;AAoBA,IAAMI,aAAa,GAAI,SAAjBA,aAAiB,CAACC,QAAD,EAAa;AAChC,SAAO,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AACND,YAAAA,QAAQ,CAAC;AACLH,cAAAA,IAAI,EAAC,cADA;AAELC,cAAAA,OAAO,EAACG;AAFH,aAAD,CAAR;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAMF,CAPF;;4BAQmCjB,oBAAoB,CAACU,eAAD,EAAiB;AAACK,EAAAA,aAAa,EAAbA;AAAD,CAAjB,EAAiCb,YAAjC,C;IAAxCgB,O,yBAAAA,O;IAAQC,Q,yBAAAA,Q","sourcesContent":["import globalContextCreator from '../context/globalContextCreator';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nconst initialState = {\r\n    favoriteId:[]\r\n}\r\n\r\nconst setToStorage = async()=>{\r\n    try{\r\n        await AsyncStorage.setItem('favorites::id',JSON.stringify(favoriteId));\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nconst favoriteReducer = (state,actions)=>{\r\n    switch(actions.type){\r\n        case 'SET_FAVORITE':\r\n            setToStorage();\r\n            return{\r\n                ...state,\r\n                favoriteId:[...state.favoriteId,actions.payload],\r\n            }\r\n        case 'GET_FAVORITE':\r\n            return{\r\n                ...state,\r\n                favoriteId: actions.payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nconst setToFavorite =  (dispatch) =>{\r\n    return async (id)=>{\r\n     dispatch({\r\n         type:'SET_FAVORITE',\r\n         payload:id\r\n        });\r\n    };\r\n }\r\n export const {Context,Provider} = globalContextCreator(favoriteReducer,{setToFavorite},initialState);"]},"metadata":{},"sourceType":"module"}