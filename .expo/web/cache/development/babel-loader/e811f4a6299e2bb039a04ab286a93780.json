{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\StudyTropicScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport tropicApi from \"../api/baseApi\";\nimport { COLORS } from \"../constants\";\n\nvar StudyTropicScreen = function StudyTropicScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var id = route.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tropics = _useState2[0],\n      setTropics = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsloading = _useState4[1];\n\n  var loadTropics = function loadTropics() {\n    var _await$tropicApi$get, data;\n\n    return _regeneratorRuntime.async(function loadTropics$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(id == 1)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(tropicApi.get('/get-bcs-tropics'));\n\n          case 3:\n            _await$tropicApi$get = _context.sent;\n            data = _await$tropicApi$get.data;\n            setTropics(data);\n            setIsloading(false);\n            _context.next = 10;\n            break;\n\n          case 9:\n            if (id == 2) {\n              Alert.alert('comming soon....');\n              navigation.push('Home');\n            } else if (id == 3) {\n              Alert.alert('comming soon....');\n              navigation.push('Home');\n            } else if (id == 4) {\n              Alert.alert('comming soon....');\n              navigation.push('Home');\n            } else if (id == 5) {\n              Alert.alert('comming soon....');\n              navigation.push('Home');\n            } else if (id == 6) {\n              Alert.alert('comming soon....');\n              navigation.push('Home');\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadTropics();\n  }, [0]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, route.params.title, route.params.id));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray\n  }\n});\nexport default StudyTropicScreen;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/StudyTropicScreen.js"],"names":["React","useState","useEffect","tropicApi","COLORS","StudyTropicScreen","route","navigation","id","params","tropics","setTropics","isLoading","setIsloading","loadTropics","get","data","Alert","alert","push","title","styles","StyleSheet","create","container","flex","backgroundColor","lightGray"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;;;AAOA,OAAOC,SAAP;AACA,SAASC,MAAT;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAsB;AAAA,MAApBC,KAAoB,QAApBA,KAAoB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC5C,MAAMC,EAAE,GAAGF,KAAK,CAACG,MAAN,CAAaD,EAAxB;;AAD4C,kBAEfP,QAAQ,CAAC,EAAD,CAFO;AAAA;AAAA,MAErCS,OAFqC;AAAA,MAE7BC,UAF6B;;AAAA,mBAGXV,QAAQ,CAAC,IAAD,CAHG;AAAA;AAAA,MAGrCW,SAHqC;AAAA,MAG3BC,YAH2B;;AAK5C,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACbN,EAAE,IAAE,CADS;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAESL,SAAS,CAACY,GAAV,CAAc,kBAAd,CAFT;;AAAA;AAAA;AAELC,YAAAA,IAFK,wBAELA,IAFK;AAGZL,YAAAA,UAAU,CAACK,IAAD,CAAV;AACAH,YAAAA,YAAY,CAAC,KAAD,CAAZ;AAJY;AAAA;;AAAA;AAKV,gBAAGL,EAAE,IAAE,CAAP,EAAS;AACXS,cAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ;AACAX,cAAAA,UAAU,CAACY,IAAX,CAAgB,MAAhB;AACH,aAHK,MAGA,IAAGX,EAAE,IAAE,CAAP,EAAS;AACXS,cAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ;AACAX,cAAAA,UAAU,CAACY,IAAX,CAAgB,MAAhB;AACH,aAHK,MAGA,IAAGX,EAAE,IAAE,CAAP,EAAS;AACXS,cAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ;AACAX,cAAAA,UAAU,CAACY,IAAX,CAAgB,MAAhB;AACH,aAHK,MAGA,IAAGX,EAAE,IAAE,CAAP,EAAS;AACXS,cAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ;AACAX,cAAAA,UAAU,CAACY,IAAX,CAAgB,MAAhB;AACH,aAHK,MAGA,IAAGX,EAAE,IAAE,CAAP,EAAS;AACXS,cAAAA,KAAK,CAACC,KAAN,CAAY,kBAAZ;AACAX,cAAAA,UAAU,CAACY,IAAX,CAAgB,MAAhB;AACH;;AApBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAuBAjB,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEN,CAAC,CAAD,CAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,KAAK,CAACG,MAAN,CAAaW,KAApB,EAA2Bd,KAAK,CAACG,MAAN,CAAaD,EAAxC,CADJ,CADJ;AAMH,CAtCD;;AAwCA,IAAMa,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAC;AACNC,IAAAA,IAAI,EAAC,CADC;AAENC,IAAAA,eAAe,EAACtB,MAAM,CAACuB;AAFjB;AADmB,CAAlB,CAAf;AAOA,eAAetB,iBAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport{\r\n    Text,\r\n    View,\r\n    Alert,\r\n    StyleSheet\r\n} from 'react-native';\r\nimport tropicApi from '../api/baseApi';\r\nimport { COLORS } from '../constants';\r\n\r\nconst StudyTropicScreen = ({route,navigation})=>{\r\n    const id = route.params.id;\r\n    const [tropics,setTropics] = useState([]);\r\n    const [isLoading,setIsloading] = useState(true);\r\n\r\n    const loadTropics = async()=>{\r\n        if(id==1){\r\n            const {data} = await tropicApi.get('/get-bcs-tropics');\r\n            setTropics(data);\r\n            setIsloading(false);\r\n        }else if(id==2){\r\n            Alert.alert('comming soon....');\r\n            navigation.push('Home')\r\n        }else if(id==3){\r\n            Alert.alert('comming soon....')\r\n            navigation.push('Home')\r\n        }else if(id==4){\r\n            Alert.alert('comming soon....')\r\n            navigation.push('Home')\r\n        }else if(id==5){\r\n            Alert.alert('comming soon....')\r\n            navigation.push('Home')\r\n        }else if(id==6){\r\n            Alert.alert('comming soon....')\r\n            navigation.push('Home')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTropics()\r\n    }, [0])\r\n\r\n    return(\r\n        <View>\r\n            <Text>{route.params.title}{route.params.id}</Text>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor:COLORS.lightGray\r\n    }\r\n})\r\n\r\nexport default StudyTropicScreen;"]},"metadata":{},"sourceType":"module"}