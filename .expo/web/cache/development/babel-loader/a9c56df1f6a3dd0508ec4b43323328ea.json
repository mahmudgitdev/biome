{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\HomeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { icons, COLORS, SIZES, FONTS } from \"../constants\";\nimport { categories } from \"../localdata/data\";\n\nvar HomeScreen = function HomeScreen() {\n  var categoryListHeightAnimationValue = useRef(new Animated.Value(115)).current;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCategory = _useState2[0],\n      setSelectedCategory = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showMoreToggle = _useState4[0],\n      setShowMoreToggle = _useState4[1];\n\n  var renderCategoryList = function renderCategoryList() {\n    var renderItem = function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setSelectedCategory(item);\n        },\n        style: _objectSpread({\n          flex: 1,\n          flexDirection: 'row',\n          margin: 5,\n          paddingVertical: SIZES.radius,\n          paddingHorizontal: SIZES.padding,\n          borderRadius: 5,\n          backgroundColor: COLORS.white\n        }, styles.shadow),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: item.icon,\n        style: {\n          width: 20,\n          height: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread({\n          marginLeft: SIZES.base,\n          color: COLORS.primary\n        }, FONTS.h4),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, item.name));\n    };\n\n    return React.createElement(View, {\n      style: {\n        paddingHorizontal: SIZES.padding - 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: {\n        height: categoryListHeightAnimationValue\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, React.createElement(FlatList, {\n      data: categories,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.id;\n      },\n      numColumns: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        flexDirection: 'row',\n        marginVertical: SIZES.base,\n        justifyContent: 'center'\n      },\n      onPress: function onPress() {\n        if (showMoreToggle) {\n          Animated.timing(categoryListHeightAnimationValue, {\n            toValue: 115,\n            duration: 500,\n            useNativeDriver: false\n          }).start();\n        } else {\n          Animated.timing(categoryListHeightAnimationValue, {\n            toValue: 172.5,\n            duration: 500,\n            useNativeDriver: false\n          }).start();\n        }\n\n        setShowMoreToggle(!showMoreToggle);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: _objectSpread({}, FONTS.body4),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, showMoreToggle ? \"LESS\" : \"MORE\"), React.createElement(Image, {\n      source: showMoreToggle ? icons.up_arrow : icons.down_arrow,\n      style: {\n        marginLeft: 5,\n        width: 15,\n        height: 15,\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.lightGray2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      paddingBottom: 60\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, renderCategoryList()))));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 3\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/HomeScreen.js"],"names":["React","useState","useRef","icons","COLORS","SIZES","FONTS","categories","HomeScreen","categoryListHeightAnimationValue","Animated","Value","current","selectedCategory","setSelectedCategory","showMoreToggle","setShowMoreToggle","renderCategoryList","renderItem","item","flex","flexDirection","margin","paddingVertical","radius","paddingHorizontal","padding","borderRadius","backgroundColor","white","styles","shadow","icon","width","height","marginLeft","base","color","primary","h4","name","id","marginVertical","justifyContent","timing","toValue","duration","useNativeDriver","start","body4","up_arrow","down_arrow","alignSelf","lightGray2","paddingBottom","StyleSheet","create","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{ useState, useRef } from 'react';\r\nimport { \r\n    Image, \r\n    SafeAreaView, \r\n    Text, \r\n    View,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    FlatList,\r\n    Animated,\r\n    StyleSheet\r\n} from 'react-native';\r\n\r\nimport {icons,COLORS,SIZES,FONTS} from '../constants';\r\nimport {categories} from '../localdata/data';\r\n\r\nconst HomeScreen = () =>{\r\n    const categoryListHeightAnimationValue = useRef(new Animated.Value(115)).current;\r\n    const [selectedCategory, setSelectedCategory] = useState(null)\r\n    const [showMoreToggle, setShowMoreToggle] = useState(false)\r\n    const renderCategoryList = () =>{\r\n\r\n        const renderItem = ({ item }) => (\r\n            <TouchableOpacity\r\n                onPress={() => setSelectedCategory(item)}\r\n                style={{\r\n                    flex: 1,\r\n                    flexDirection: 'row',\r\n                    margin: 5,\r\n                    paddingVertical: SIZES.radius,\r\n                    paddingHorizontal: SIZES.padding,\r\n                    borderRadius: 5,\r\n                    backgroundColor: COLORS.white,\r\n                    ...styles.shadow\r\n                }}\r\n            >\r\n                <Image\r\n                    source={item.icon}\r\n                    style={{\r\n                        width: 20,\r\n                        height: 20\r\n                    }}\r\n                />\r\n                <Text style={{ marginLeft: SIZES.base, color: COLORS.primary, ...FONTS.h4 }}>{item.name}</Text>\r\n            </TouchableOpacity>\r\n        )\r\n\r\n        return (\r\n            <View style={{ paddingHorizontal: SIZES.padding - 5 }}>\r\n                <Animated.View style={{ height: categoryListHeightAnimationValue }}>\r\n                    <FlatList\r\n                        data={categories}\r\n                        renderItem={renderItem}\r\n                        keyExtractor={item => `${item.id}`}\r\n                        numColumns={2}\r\n                    />\r\n                </Animated.View>\r\n\r\n                <TouchableOpacity\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        marginVertical: SIZES.base,\r\n                        justifyContent: 'center'\r\n                    }}\r\n                    onPress={() => {\r\n                        if (showMoreToggle) {\r\n                            Animated.timing(categoryListHeightAnimationValue, {\r\n                                toValue: 115,\r\n                                duration: 500,\r\n                                useNativeDriver: false\r\n                            }).start()\r\n                        } else {\r\n                            Animated.timing(categoryListHeightAnimationValue, {\r\n                                toValue: 172.5,\r\n                                duration: 500,\r\n                                useNativeDriver: false\r\n                            }).start()\r\n                        }\r\n\r\n                        setShowMoreToggle(!showMoreToggle)\r\n                    }}\r\n                >\r\n                    <Text style={{ ...FONTS.body4 }}>{showMoreToggle ? \"LESS\" : \"MORE\"}</Text>\r\n                    <Image\r\n                        source={showMoreToggle ? icons.up_arrow : icons.down_arrow}\r\n                        style={{ marginLeft: 5, width: 15, height: 15, alignSelf: 'center' }}\r\n                    />\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <SafeAreaView>\r\n        <View style={{ flex: 1, backgroundColor: COLORS.lightGray2 }}>\r\n        <ScrollView contentContainerStyle={{ paddingBottom: 60 }}>\r\n                <View>\r\n                {renderCategoryList()}\r\n                </View>\r\n                \r\n            </ScrollView>\r\n        </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 2,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 3,\r\n    }\r\n})\r\n\r\nexport default HomeScreen;"]},"metadata":{},"sourceType":"module"}