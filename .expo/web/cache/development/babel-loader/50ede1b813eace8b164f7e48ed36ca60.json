{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\node_modules\\\\react-native-multiple-choice-picker\\\\src\\\\MultipleChoice\\\\DefaultTouchableComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar DefaultTouchableComponent = function (_Component) {\n  _inherits(DefaultTouchableComponent, _Component);\n\n  var _super = _createSuper(DefaultTouchableComponent);\n\n  function DefaultTouchableComponent() {\n    _classCallCheck(this, DefaultTouchableComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DefaultTouchableComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          isChosen = _this$props.isChosen,\n          borderColor = _this$props.borderColor,\n          style = _this$props.style,\n          innerChosenSize = _this$props.innerChosenSize,\n          innerChosenColor = _this$props.innerChosenColor,\n          onPress = _this$props.onPress;\n      return React.createElement(TouchableOpacity, {\n        onPress: onPress,\n        style: [{\n          height: size,\n          width: size,\n          borderRadius: size / 2,\n          borderColor: borderColor,\n          borderWidth: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: {\n          height: innerChosenSize,\n          width: innerChosenSize,\n          borderRadius: innerChosenSize / 2,\n          backgroundColor: isChosen ? innerChosenColor : 'transparent'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return DefaultTouchableComponent;\n}(Component);\n\nDefaultTouchableComponent.defaultProps = {\n  isChosen: false,\n  size: 24,\n  borderColor: 'silver',\n  style: {},\n  innerChosenSize: 24 * 3.5 / 5,\n  innerChosenColor: '#e2641e',\n  onPress: {}\n};\nexport { DefaultTouchableComponent as default };","map":{"version":3,"sources":["L:/ReactNative/biome/node_modules/react-native-multiple-choice-picker/src/MultipleChoice/DefaultTouchableComponent.js"],"names":["React","Component","DefaultTouchableComponent","props","size","isChosen","borderColor","style","innerChosenSize","innerChosenColor","onPress","height","width","borderRadius","borderWidth","alignItems","justifyContent","backgroundColor","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;IAaqBC,yB;;;;;;;;;;;;;6BAaX;AAAA,wBACmF,KAAKC,KADxF;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,QADN,eACMA,QADN;AAAA,UACgBC,WADhB,eACgBA,WADhB;AAAA,UAC6BC,KAD7B,eAC6BA,KAD7B;AAAA,UACoCC,eADpC,eACoCA,eADpC;AAAA,UACqDC,gBADrD,eACqDA,gBADrD;AAAA,UACuEC,OADvE,eACuEA,OADvE;AAER,aACC,oBAAC,gBAAD;AACC,QAAA,OAAO,EAAEA,OADV;AAEC,QAAA,KAAK,EAAE,CAAC;AACPC,UAAAA,MAAM,EAAEP,IADD;AAEPQ,UAAAA,KAAK,EAAER,IAFA;AAGPS,UAAAA,YAAY,EAAET,IAAI,GAAG,CAHd;AAIPE,UAAAA,WAAW,EAAXA,WAJO;AAKPQ,UAAAA,WAAW,EAAE,CALN;AAMPC,UAAAA,UAAU,EAAE,QANL;AAOPC,UAAAA,cAAc,EAAE;AAPT,SAAD,EAQJT,KARI,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AACZI,UAAAA,MAAM,EAAEH,eADI;AAEZI,UAAAA,KAAK,EAAEJ,eAFK;AAGZK,UAAAA,YAAY,EAAEL,eAAe,GAAG,CAHpB;AAIZS,UAAAA,eAAe,EAAEZ,QAAQ,GAAGI,gBAAH,GAAsB;AAJnC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXD,CADD;AAoBA;;;;EAnCqDR,S;;AAAlCC,yB,CAGbgB,Y,GAAe;AACrBb,EAAAA,QAAQ,EAAE,KADW;AAErBD,EAAAA,IAAI,EAAE,EAFe;AAGrBE,EAAAA,WAAW,EAAE,QAHQ;AAIrBC,EAAAA,KAAK,EAAE,EAJc;AAKrBC,EAAAA,eAAe,EAAE,KAAK,GAAL,GAAW,CALP;AAMrBC,EAAAA,gBAAgB,EAAE,SANG;AAOrBC,EAAAA,OAAO,EAAE;AAPY,C;SAHFR,yB","sourcesContent":["import React, { Component } from 'react';\nimport { View, TouchableOpacity } from 'react-native';\n\ntype Props = {\n\tisChosen?: boolean,\n\tsize?: number,\n\tborderColor?: string,\n\tstyle?: any,\n\tinnerChosenSize?: number,\n\tinnerChosenColor?: string,\n\tonPress?: any\n};\n\nexport default class DefaultTouchableComponent extends Component {\n\tprops: Props;\n\n\tstatic defaultProps = {\n\t\tisChosen: false,\n\t\tsize: 24,\n\t\tborderColor: 'silver',\n\t\tstyle: {},\n\t\tinnerChosenSize: 24 * 3.5 / 5,\n\t\tinnerChosenColor: '#e2641e',\n\t\tonPress: {}\n\t};\n\n\trender() {\n\t\tconst { size, isChosen, borderColor, style, innerChosenSize, innerChosenColor, onPress } = this.props;\n\t\treturn (\n\t\t\t<TouchableOpacity\n\t\t\t\tonPress={onPress}\n\t\t\t\tstyle={[{\n\t\t\t\t\theight: size,\n\t\t\t\t\twidth: size,\n\t\t\t\t\tborderRadius: size / 2,\n\t\t\t\t\tborderColor,\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'center'\n\t\t\t\t}, style]}>\n\t\t\t\t<View style={{\n\t\t\t\t\theight: innerChosenSize,\n\t\t\t\t\twidth: innerChosenSize,\n\t\t\t\t\tborderRadius: innerChosenSize / 2,\n\t\t\t\t\tbackgroundColor: isChosen ? innerChosenColor : 'transparent'\n\t\t\t\t}}/>\n\t\t\t</TouchableOpacity>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}