{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\FavoriteScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport favoriteApi from \"../api/baseApi\";\nimport { COLORS } from \"../constants\";\nimport { MaterialIcons } from '@expo/vector-icons';\n\nvar FavoriteScreen = function FavoriteScreen() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      favorites = _useState2[0],\n      setFavorites = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsloading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showanswer = _useState6[0],\n      setShowanswer = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      iskey = _useState8[0],\n      setKey = _useState8[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setShowanswer(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var currentKey = AsyncStorage.getAllKeys();\n\n  var loadFavorites = function loadFavorites() {\n    var keys, ids, _await$favoriteApi$ge, data;\n\n    return _regeneratorRuntime.async(function loadFavorites$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n          case 3:\n            keys = _context.sent;\n\n            if (!(keys !== null)) {\n              _context.next = 12;\n              break;\n            }\n\n            ids = JSON.stringify(keys);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(favoriteApi.get(\"/get-favorite-list/\" + ids));\n\n          case 8:\n            _await$favoriteApi$ge = _context.sent;\n            data = _await$favoriteApi$ge.data;\n            setFavorites(data);\n            setIsloading(false);\n\n          case 12:\n            _context.next = 16;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 14]], Promise);\n  };\n\n  useEffect(function () {\n    loadFavorites();\n  }, [currentKey]);\n\n  var showToast = function showToast() {\n    ToastAndroid.showWithGravity(\"Item Removed\", ToastAndroid.SHORT, ToastAndroid.CENTER);\n  };\n\n  var removeFavorite = function removeFavorite(id) {\n    return _regeneratorRuntime.async(function removeFavorite$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(id));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0);\n\n          case 8:\n            _context2.prev = 8;\n            showToast();\n            return _context2.finish(8);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5, 8, 11]], Promise);\n  };\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, iskey ? React.createElement(Text, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"empty favorite list\") : React.createElement(View, {\n      style: _objectSpread({\n        flex: 1,\n        flexDirection: 'column',\n        margin: 5,\n        paddingVertical: 15,\n        paddingHorizontal: 18,\n        borderRadius: 5,\n        backgroundColor: COLORS.white\n      }, styles.shadow),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n      },\n      onPress: function onPress() {\n        return removeFavorite(item._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"close\",\n      size: 22,\n      color: COLORS.blue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }))), React.createElement(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 15,\n        color: COLORS.black\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, item.question), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, React.createElement(FlatList, {\n      data: item.options,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            paddingVertical: 5,\n            alignItems: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: item.isCorrect && showanswer ? COLORS.darkgreen : 'gray',\n            width: 27,\n            height: 27,\n            borderRadius: 40,\n            marginRight: 6,\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: {\n            alignSelf: 'center',\n            color: 'white'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }\n        }, item.qop)), React.createElement(Text, {\n          style: {\n            fontSize: 15\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }\n        }, item.option));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), React.createElement(Text, {\n      style: {\n        color: COLORS.darkgray,\n        fontSize: 13\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, item.describe ? item.describe : '')));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      marginRight: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Answer Mode\"), React.createElement(Switch, {\n    trackColor: {\n      false: \"#767577\",\n      true: COLORS.darkgreen\n    },\n    thumbColor: showanswer ? COLORS.lightBlue : COLORS.blue,\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: showanswer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: COLORS.blue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 24\n    }\n  }) : React.createElement(FlatList, {\n    data: favorites,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    renderItem: renderItem,\n    numColumns: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2,\n    paddingVertical: 5\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 3\n  }\n});\nexport default FavoriteScreen;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/FavoriteScreen.js"],"names":["React","useState","useEffect","AsyncStorage","favoriteApi","COLORS","MaterialIcons","FavoriteScreen","favorites","setFavorites","isLoading","setIsloading","showanswer","setShowanswer","iskey","setKey","toggleSwitch","previousState","currentKey","getAllKeys","loadFavorites","keys","ids","JSON","stringify","get","data","showToast","ToastAndroid","showWithGravity","SHORT","CENTER","removeFavorite","id","removeItem","alert","renderItem","item","flex","justifyContent","alignItems","flexDirection","margin","paddingVertical","paddingHorizontal","borderRadius","backgroundColor","white","styles","shadow","_id","blue","fontWeight","fontSize","color","black","question","options","isCorrect","darkgreen","width","height","marginRight","alignSelf","qop","option","darkgray","describe","container","false","true","lightBlue","StyleSheet","create","lightGray2","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { \r\n    View,\r\n    StyleSheet,\r\n    Text,\r\n    FlatList,\r\n    TouchableOpacity,\r\n    ActivityIndicator,\r\n    Switch,\r\n    ToastAndroid\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport favoriteApi from '../api/baseApi';\r\nimport {COLORS} from '../constants';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst FavoriteScreen = ()=>{\r\n    const [favorites,setFavorites] = useState([]);\r\n    const [isLoading,setIsloading] = useState(true);\r\n    const [showanswer,setShowanswer] = useState(false)\r\n    const [iskey,setKey] = useState(false)\r\n    const toggleSwitch = () => setShowanswer(previousState => !previousState);\r\n    const currentKey =  AsyncStorage.getAllKeys();\r\n\r\n    const loadFavorites = async()=>{\r\n        try{\r\n            const keys = await AsyncStorage.getAllKeys();\r\n            if(keys !== null){\r\n                const ids = JSON.stringify(keys);\r\n                const {data} = await favoriteApi.get(`/get-favorite-list/${ids}`);\r\n                setFavorites(data);\r\n                setIsloading(false);\r\n            }\r\n        }catch(err){\r\n            \r\n        }\r\n\r\n    }\r\n    useEffect(()=>{\r\n        loadFavorites();\r\n    },[currentKey]);\r\n\r\n    const showToast=()=>{\r\n        ToastAndroid.showWithGravity(\r\n            \"Item Removed\",\r\n            ToastAndroid.SHORT,\r\n            ToastAndroid.CENTER\r\n          );\r\n    }\r\n\r\n    const removeFavorite = async(id)=>{\r\n        try{\r\n            await AsyncStorage.removeItem(id);\r\n        }catch(err){\r\n            alert(err);\r\n        }finally{\r\n            showToast();\r\n        }\r\n       \r\n    }\r\n\r\n    const renderItem = ({item})=>{\r\n        return(\r\n            <View>\r\n            {iskey? <Text style={{flex:1,justifyContent:'center',alignItems:'center'}}>empty favorite list</Text>:\r\n            <View style={{\r\n                flex: 1,\r\n                flexDirection: 'column',\r\n                margin: 5,\r\n                paddingVertical: 15,\r\n                paddingHorizontal: 18,\r\n                borderRadius: 5,\r\n                backgroundColor: COLORS.white,\r\n                ...styles.shadow\r\n\r\n            }}>\r\n                <View>\r\n                <TouchableOpacity\r\n                style={{flexDirection:'row',justifyContent:'flex-end'}}\r\n                onPress={()=>removeFavorite(item._id)}\r\n                >\r\n                <MaterialIcons name=\"close\" size={22} color={COLORS.blue} />\r\n                </TouchableOpacity>\r\n                </View>\r\n                <Text style={{fontWeight:'bold',fontSize:15,color:COLORS.black}}>{item.question}</Text>\r\n                <View>\r\n                <FlatList \r\n                data={item.options}\r\n                keyExtractor={item=>item._id}\r\n                renderItem={({item})=>{\r\n                    return(\r\n                        <View style={{flexDirection:'row',paddingVertical:5,alignItems:'center'}}>\r\n                            <View style={{\r\n                                backgroundColor:item.isCorrect && showanswer?COLORS.darkgreen:'gray',\r\n                                width:27,\r\n                                height:27,\r\n                                borderRadius:40,\r\n                                marginRight:6,\r\n                                justifyContent:'center'\r\n                                }}>\r\n                            <Text style={{\r\n                                alignSelf:'center',\r\n                                color:'white',\r\n                            }}>{item.qop}</Text>\r\n                            </View>\r\n                            <Text style={{fontSize:15}}>{item.option}</Text>\r\n                        </View>\r\n                    )\r\n                }}\r\n                />\r\n            </View>\r\n            <Text style={{color:COLORS.darkgray,fontSize:13}}>{item.describe?item.describe:''}</Text>\r\n            </View>\r\n        }\r\n        </View>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <View style={{flexDirection:'row',justifyContent:'flex-end',alignItems:'center'}}>\r\n                <Text style={{fontWeight:'bold',marginRight:5}}>Answer Mode</Text>\r\n            <Switch\r\n                trackColor={{ false: \"#767577\", true: COLORS.darkgreen }}\r\n                thumbColor={showanswer ? COLORS.lightBlue : COLORS.blue}\r\n                ios_backgroundColor=\"#3e3e3e\"\r\n                onValueChange={toggleSwitch}\r\n                value={showanswer}\r\n            />\r\n            </View>\r\n            {isLoading?<ActivityIndicator size=\"large\" color={COLORS.blue} />:\r\n            <FlatList\r\n            data={favorites}\r\n            keyExtractor={item=>item._id}\r\n            renderItem={renderItem}\r\n            numColumns={1}\r\n            />\r\n            }\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor:COLORS.lightGray2,\r\n        paddingVertical:5\r\n    },\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 2,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 3,\r\n    }\r\n})\r\nexport default FavoriteScreen;"]},"metadata":{},"sourceType":"module"}