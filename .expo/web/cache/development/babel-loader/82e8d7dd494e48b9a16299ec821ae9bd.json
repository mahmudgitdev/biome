{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\StudyTropicScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tropicApi from \"../api/baseApi\";\n\nvar StudyTropicScreen = function StudyTropicScreen(_ref) {\n  var route = _ref.route;\n  var id = route.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tropics = _useState2[0],\n      setTropics = _useState2[1];\n\n  var loadTropics = function loadTropics() {\n    var _await$tropicApi$get, data;\n\n    return _regeneratorRuntime.async(function loadTropics$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(id == 1)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(tropicApi.get('/get-bcs-tropics'));\n\n          case 3:\n            _await$tropicApi$get = _context.sent;\n            data = _await$tropicApi$get.data;\n            setTropics(data);\n            alert(\"ok\");\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadTropics();\n  }, [0]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, route.params.title, route.params.id));\n};\n\nexport default StudyTropicScreen;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/StudyTropicScreen.js"],"names":["React","useState","useEffect","tropicApi","StudyTropicScreen","route","id","params","tropics","setTropics","loadTropics","get","data","alert","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;AAKA,OAAOC,SAAP;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAW;AAAA,MAATC,KAAS,QAATA,KAAS;AACjC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB;;AADiC,kBAEJL,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,MAE1BO,OAF0B;AAAA,MAElBC,UAFkB;;AAIjC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACbJ,EAAE,IAAE,CADS;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAESH,SAAS,CAACQ,GAAV,CAAc,kBAAd,CAFT;;AAAA;AAAA;AAELC,YAAAA,IAFK,wBAELA,IAFK;AAGZH,YAAAA,UAAU,CAACG,IAAD,CAAV;AACAC,YAAAA,KAAK,CAAC,IAAD,CAAL;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAQAX,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,WAAW;AACd,GAFQ,EAEN,CAAC,CAAD,CAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,KAAK,CAACE,MAAN,CAAaO,KAApB,EAA2BT,KAAK,CAACE,MAAN,CAAaD,EAAxC,CADJ,CADJ;AAMH,CAtBD;;AAwBA,eAAeF,iBAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport{\r\n    Text,\r\nView\r\n} from 'react-native';\r\nimport tropicApi from '../api/baseApi';\r\n\r\nconst StudyTropicScreen = ({route})=>{\r\n    const id = route.params.id;\r\n    const [tropics,setTropics] = useState([]);\r\n\r\n    const loadTropics = async()=>{\r\n        if(id==1){\r\n            const {data} = await tropicApi.get('/get-bcs-tropics');\r\n            setTropics(data);\r\n            alert(\"ok\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTropics()\r\n    }, [0])\r\n\r\n    return(\r\n        <View>\r\n            <Text>{route.params.title}{route.params.id}</Text>\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nexport default StudyTropicScreen;"]},"metadata":{},"sourceType":"module"}