{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\ModelTestScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport questionApi from \"../api/baseApi\";\nimport { COLORS } from \"../constants\";\nimport { Ionicons } from '@expo/vector-icons';\n\nvar ModelTestScreen = function ModelTestScreen(_ref) {\n  var route = _ref.route;\n  var id = route.params.tropicsId;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questions = _useState2[0],\n      setQuestions = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsloading = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentQuestion = _useState8[0],\n      setCurrentQuestion = _useState8[1];\n\n  var _useState9 = useState('gray'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      colorA = _useState10[0],\n      setColorA = _useState10[1];\n\n  var _useState11 = useState('gray'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      colorB = _useState12[0],\n      setColorB = _useState12[1];\n\n  var _useState13 = useState('gray'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      colorC = _useState14[0],\n      setColorC = _useState14[1];\n\n  var _useState15 = useState('gray'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      colorD = _useState16[0],\n      setColorD = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isShowScore = _useState18[0],\n      setShowScore = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      scoreText = _useState20[0],\n      setScoreText = _useState20[1];\n\n  var loadQuestions = function loadQuestions() {\n    var _await$questionApi$ge, data;\n\n    return _regeneratorRuntime.async(function loadQuestions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(questionApi.get(\"/get-questions/\" + id));\n\n          case 2:\n            _await$questionApi$ge = _context.sent;\n            data = _await$questionApi$ge.data;\n            setQuestions(data);\n            setIsloading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleAnswer = function handleAnswer(isCorrect, qop) {\n    if (qop == 'A') {\n      setColorA(COLORS.darkgreen);\n    } else if (qop == 'B') {\n      setColorB(COLORS.darkgreen);\n    } else if (qop == 'C') {\n      setColorC(COLORS.darkgreen);\n    } else if (qop == 'D') {\n      setColorD(COLORS.darkgreen);\n    }\n\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    var nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setTimeout(function () {\n        setCurrentQuestion(nextQuestion);\n        setColorA('gray');\n        setColorB('gray');\n        setColorC('gray');\n        setColorD('gray');\n      }, 300);\n    } else {\n      if (score == questions.length || score == questions.length - 1 || score == questions.length - 2 || score == questions.length - 3) {\n        setScoreText('Outstanding!! Impressive!!');\n      } else if (score == questions.length - 4 || score == questions.length - 5 || score == questions.length - 6) {\n        setScoreText('Excellent!! Great!!');\n      } else if (score >= questions.length / 2) {\n        setScoreText('Below Satisfactory');\n      } else if (score < questions.length / 2) {\n        setScoreText('Average!!');\n      } else if (score <= 0) {\n        setScoreText('Opps! Please Study First');\n      }\n\n      setShowScore(true);\n    }\n  };\n\n  useEffect(function () {\n    loadQuestions();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, isShowScore ? React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      width: 350,\n      height: 350,\n      alignSelf: 'center',\n      backgroundColor: COLORS.lightGray,\n      borderRadius: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignSelf: 'center',\n      paddingVertical: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      fontWeight: 'bold',\n      color: COLORS.peach\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, scoreText), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 20,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 22\n    }\n  }, \"Your Score : \", score)), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-evenly',\n      paddingVertical: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 20\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 24\n    }\n  }, React.createElement(Ionicons, {\n    style: {\n      marginRight: 5\n    },\n    name: \"radio-button-on\",\n    size: 24,\n    color: COLORS.darkgreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 24\n    }\n  }, \"Currect Answer: \", score)), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }\n  }, React.createElement(Ionicons, {\n    style: {\n      marginRight: 5\n    },\n    name: \"radio-button-on\",\n    size: 24,\n    color: COLORS.peach,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 24\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }\n  }, \"Wrong Answer: \", questions.length - score))))) : React.createElement(React.Fragment, null, isLoading ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: COLORS.blue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      paddingVertical: 6,\n      backgroundColor: COLORS.lightBlue\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 15,\n      alignSelf: 'center',\n      padding: 5,\n      color: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Time Remaining : 20min\")), React.createElement(View, {\n    style: _objectSpread({\n      flex: 1,\n      flexDirection: 'column',\n      margin: 5,\n      paddingVertical: 15,\n      paddingHorizontal: 18,\n      borderRadius: 5,\n      backgroundColor: COLORS.white\n    }, styles.shadow),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 22,\n      color: COLORS.blue\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Question \", currentQuestion + 1, \"/\", questions.length)), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      fontSize: 20,\n      color: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, questions[currentQuestion].question), React.createElement(View, {\n    style: {\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAnswer(questions[currentQuestion].options[0].isCorrect, questions[currentQuestion].options[0].qop);\n    },\n    style: {\n      flexDirection: 'row',\n      paddingVertical: 8,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colorA,\n      width: 33,\n      height: 33,\n      borderRadius: 40,\n      marginRight: 10,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white',\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[0].qop)), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: '600',\n      color: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[0].option)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAnswer(questions[currentQuestion].options[1].isCorrect, questions[currentQuestion].options[1].qop);\n    },\n    style: {\n      flexDirection: 'row',\n      paddingVertical: 8,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colorB,\n      width: 33,\n      height: 33,\n      borderRadius: 40,\n      marginRight: 10,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white',\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[1].qop)), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: '600',\n      color: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[1].option)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAnswer(questions[currentQuestion].options[2].isCorrect, questions[currentQuestion].options[2].qop);\n    },\n    style: {\n      flexDirection: 'row',\n      paddingVertical: 8,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colorC,\n      width: 33,\n      height: 33,\n      borderRadius: 40,\n      marginRight: 10,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white',\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[2].qop)), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: '600',\n      color: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[2].option)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleAnswer(questions[currentQuestion].options[3].isCorrect, questions[currentQuestion].options[3].qop);\n    },\n    style: {\n      flexDirection: 'row',\n      paddingVertical: 8,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colorD,\n      width: 33,\n      height: 33,\n      borderRadius: 40,\n      marginRight: 10,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white',\n      fontSize: 16,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[3].qop)), React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: '600',\n      color: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, questions[currentQuestion].options[3].option)))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 3\n  }\n});\nexport default ModelTestScreen;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/ModelTestScreen.js"],"names":["React","useState","useEffect","useContext","questionApi","COLORS","Ionicons","ModelTestScreen","route","id","params","tropicsId","questions","setQuestions","isLoading","setIsloading","score","setScore","currentQuestion","setCurrentQuestion","colorA","setColorA","colorB","setColorB","colorC","setColorC","colorD","setColorD","isShowScore","setShowScore","scoreText","setScoreText","loadQuestions","get","data","handleAnswer","isCorrect","qop","darkgreen","nextQuestion","length","setTimeout","styles","container","flex","backgroundColor","primary","justifyContent","width","height","alignSelf","lightGray","borderRadius","paddingVertical","fontSize","fontWeight","color","peach","textAlign","flexDirection","alignItems","marginRight","blue","lightBlue","padding","margin","paddingHorizontal","white","shadow","question","options","option","StyleSheet","create","lightGray2","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react';\r\nimport { \r\n    View,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableOpacity,\r\n    ActivityIndicator,\r\n} from 'react-native';\r\nimport questionApi from '../api/baseApi';\r\nimport {COLORS} from '../constants';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst ModelTestScreen = ({route})=>{\r\n    const id = route.params.tropicsId\r\n    const [questions,setQuestions] = useState([]);\r\n    const [isLoading,setIsloading] = useState(true);\r\n    const [score,setScore] =  useState(0);\r\n    const [currentQuestion,setCurrentQuestion] = useState(0);\r\n    const [colorA,setColorA] = useState('gray');\r\n    const [colorB,setColorB] = useState('gray');\r\n    const [colorC,setColorC] = useState('gray');\r\n    const [colorD,setColorD] = useState('gray');\r\n    const [isShowScore, setShowScore] = useState(false);\r\n    const [scoreText,setScoreText] = useState('');\r\n\r\n\r\n    const loadQuestions = async()=>{\r\n        const {data} = await questionApi.get(`/get-questions/${id}`);\r\n        setQuestions(data);\r\n        setIsloading(false);\r\n\r\n    }\r\n\r\n    const handleAnswer = (isCorrect,qop)=>{\r\n        if(qop == 'A'){\r\n            setColorA(COLORS.darkgreen);\r\n        }else if(qop == 'B'){\r\n            setColorB(COLORS.darkgreen);\r\n        }else if(qop == 'C'){\r\n            setColorC(COLORS.darkgreen);\r\n        }else if(qop == 'D'){\r\n            setColorD(COLORS.darkgreen);\r\n        }\r\n        if(isCorrect){\r\n            setScore(score+1);\r\n        }\r\n        const nextQuestion = currentQuestion +1;\r\n\r\n        if(nextQuestion < questions.length){\r\n            setTimeout(()=>{\r\n                setCurrentQuestion(nextQuestion);\r\n                setColorA('gray');\r\n                setColorB('gray');\r\n                setColorC('gray');\r\n                setColorD('gray');\r\n            },300)\r\n        }else{\r\n            if(score == questions.length || score == questions.length-1 || score == questions.length-2 || score == questions.length-3 ){\r\n                setScoreText('Outstanding!! Impressive!!');\r\n            }else if(score == questions.length -4 || score == questions.length-5 || score == questions.length-6){\r\n                setScoreText('Excellent!! Great!!');\r\n            }else if(score >= questions.length/2){\r\n                setScoreText('Below Satisfactory');\r\n            }else if (score < questions.length/2) {\r\n                setScoreText('Average!!');\r\n            }\r\n            else if(score <= 0){\r\n                setScoreText('Opps! Please Study First');\r\n            }\r\n            setShowScore(true);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadQuestions();\r\n    },[]);\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n        {isShowScore?(\r\n            <View style={{flex:1,backgroundColor:COLORS.primary,justifyContent:'center'}}>\r\n                <View style={{\r\n                    width:350,\r\n                    height:350,\r\n                    alignSelf:'center',\r\n                    backgroundColor:COLORS.lightGray,\r\n                    borderRadius:10\r\n                    }}>\r\n                   <View style={{justifyContent:'center',alignSelf:'center',paddingVertical:15}}>\r\n                    <Text style={{fontSize:25,fontWeight:'bold',color:COLORS.peach}}>{scoreText}</Text>\r\n                     <Text style={{fontWeight:'bold',fontSize:20,textAlign:'center'}}>Your Score : {score}</Text>\r\n                   </View>\r\n                   <View style={{flexDirection:'row',justifyContent:'space-evenly',paddingVertical:100}}>\r\n                       <View style={{flexDirection:'row',alignItems:'center'}}>\r\n                       <Ionicons style={{marginRight:5}} name=\"radio-button-on\" size={24} color={COLORS.darkgreen} />\r\n                       <Text style={{fontWeight:'bold'}}>Currect Answer: {score}</Text>\r\n                       </View>\r\n                       <View style={{flexDirection:'row',alignItems:'center'}}>\r\n                       <Ionicons style={{marginRight:5}} name=\"radio-button-on\" size={24} color={COLORS.peach} />\r\n                       <Text style={{fontWeight:'bold'}}>Wrong Answer: {questions.length - score}</Text>\r\n                       </View>\r\n                       \r\n                   </View>\r\n                </View>\r\n            </View>\r\n        ):(\r\n        <>\r\n        {isLoading?(\r\n            <View>\r\n                <ActivityIndicator size=\"large\" color={COLORS.blue} />\r\n            </View>\r\n        ):(\r\n        <>\r\n        <View style={{paddingVertical:6,backgroundColor:COLORS.lightBlue}}>\r\n            <Text style={{\r\n                fontWeight:'bold',\r\n                fontSize:15,\r\n                alignSelf:'center',\r\n                padding:5,\r\n                color:COLORS.primary\r\n            }}>Time Remaining : 20min</Text>\r\n        </View>\r\n\r\n            <View style={{\r\n                flex: 1,\r\n                flexDirection: 'column',\r\n                margin: 5,\r\n                paddingVertical: 15,\r\n                paddingHorizontal: 18,\r\n                borderRadius: 5,\r\n                backgroundColor: COLORS.white,\r\n                ...styles.shadow\r\n\r\n            }}>\r\n            <View style={{paddingVertical:10}}>\r\n                <Text style={{\r\n                    fontWeight:'bold',\r\n                    fontSize:22,\r\n                    color:COLORS.blue\r\n                }}>Question {currentQuestion + 1}/{questions.length}</Text>\r\n            </View>\r\n            <Text style={{fontWeight:'bold',fontSize:20,color:COLORS.primary}}>{questions[currentQuestion].question}</Text>\r\n                <View style={{\r\n                    padding:15\r\n                }}>\r\n                <TouchableOpacity\r\n                    onPress={()=>handleAnswer(questions[currentQuestion].options[0].isCorrect,questions[currentQuestion].options[0].qop)}\r\n                     style={{\r\n                        flexDirection:'row',\r\n                        paddingVertical:8,\r\n                        alignItems:'center',\r\n                        }}>\r\n                        <View style={{\r\n                            backgroundColor:colorA,\r\n                            width:33,\r\n                            height:33,\r\n                            borderRadius:40,\r\n                            marginRight:10,\r\n                            justifyContent:'center'\r\n                            }}>\r\n                        \r\n                        <Text \r\n                        style={{\r\n                            alignSelf:'center',\r\n                            color:'white',\r\n                            fontSize:16,\r\n                            fontWeight:'bold'\r\n                        }}>{questions[currentQuestion].options[0].qop}</Text>\r\n                        </View>\r\n                        <Text \r\n                        style={{\r\n                            fontSize:20,\r\n                            fontWeight:'600',\r\n                            color:COLORS.primary\r\n                            }}>{questions[currentQuestion].options[0].option}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    onPress={()=>handleAnswer(questions[currentQuestion].options[1].isCorrect,questions[currentQuestion].options[1].qop)}\r\n                     style={{\r\n                        flexDirection:'row',\r\n                        paddingVertical:8,\r\n                        alignItems:'center',\r\n                        }}>\r\n                        <View style={{\r\n                            backgroundColor:colorB,\r\n                            width:33,\r\n                            height:33,\r\n                            borderRadius:40,\r\n                            marginRight:10,\r\n                            justifyContent:'center'\r\n                            }}>\r\n                        \r\n                        <Text \r\n                        style={{\r\n                            alignSelf:'center',\r\n                            color:'white',\r\n                            fontSize:16,\r\n                            fontWeight:'bold'\r\n                        }}>{questions[currentQuestion].options[1].qop}</Text>\r\n                        </View>\r\n                        <Text \r\n                        style={{\r\n                            fontSize:20,\r\n                            fontWeight:'600',\r\n                            color:COLORS.primary\r\n                            }}>{questions[currentQuestion].options[1].option}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    onPress={()=>handleAnswer(questions[currentQuestion].options[2].isCorrect,questions[currentQuestion].options[2].qop)}\r\n                     style={{\r\n                        flexDirection:'row',\r\n                        paddingVertical:8,\r\n                        alignItems:'center',\r\n                        }}>\r\n                        <View style={{\r\n                            backgroundColor:colorC,\r\n                            width:33,\r\n                            height:33,\r\n                            borderRadius:40,\r\n                            marginRight:10,\r\n                            justifyContent:'center'\r\n                            }}>\r\n                        \r\n                        <Text \r\n                        style={{\r\n                            alignSelf:'center',\r\n                            color:'white',\r\n                            fontSize:16,\r\n                            fontWeight:'bold'\r\n                        }}>{questions[currentQuestion].options[2].qop}</Text>\r\n                        </View>\r\n                        <Text \r\n                        style={{\r\n                            fontSize:20,\r\n                            fontWeight:'600',\r\n                            color:COLORS.primary\r\n                            }}>{questions[currentQuestion].options[2].option}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                    onPress={()=>handleAnswer(questions[currentQuestion].options[3].isCorrect,questions[currentQuestion].options[3].qop)}\r\n                     style={{\r\n                        flexDirection:'row',\r\n                        paddingVertical:8,\r\n                        alignItems:'center',\r\n                        }}>\r\n                        <View style={{\r\n                            backgroundColor:colorD,\r\n                            width:33,\r\n                            height:33,\r\n                            borderRadius:40,\r\n                            marginRight:10,\r\n                            justifyContent:'center'\r\n                            }}>\r\n                        \r\n                        <Text \r\n                        style={{\r\n                            alignSelf:'center',\r\n                            color:'white',\r\n                            fontSize:16,\r\n                            fontWeight:'bold'\r\n                        }}>{questions[currentQuestion].options[3].qop}</Text>\r\n                        </View>\r\n                        <Text \r\n                        style={{\r\n                            fontSize:20,\r\n                            fontWeight:'600',\r\n                            color:COLORS.primary\r\n                            }}>{questions[currentQuestion].options[3].option}</Text>\r\n                </TouchableOpacity>\r\n\r\n                </View>\r\n                    \r\n            </View>\r\n            </>\r\n        )}\r\n          </>\r\n        )}\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor:COLORS.lightGray2,\r\n    },\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 2,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 3,\r\n    }\r\n})\r\nexport default ModelTestScreen;"]},"metadata":{},"sourceType":"module"}