{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\AllCircularScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLORS, SIZES } from \"../constants\";\nimport { AntDesign } from '@expo/vector-icons';\nimport circularApi from \"../api/baseApi\";\n\nvar AllCircularScreen = function AllCircularScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      circular = _useState4[0],\n      setCircular = _useState4[1];\n\n  var loadCircular = function loadCircular() {\n    var _await$circularApi$ge, data;\n\n    return _regeneratorRuntime.async(function loadCircular$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(circularApi.get('/get-all-circulars'));\n\n          case 2:\n            _await$circularApi$ge = _context.sent;\n            data = _await$circularApi$ge.data;\n            setCircular(data);\n            setIsLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadCircular();\n  }, [0]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingVertical: 6,\n      backgroundColor: COLORS.lightBlue\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: COLORS.white,\n      fontWeight: 'bold',\n      marginLeft: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Total \", circular.length, \" Jobs\")), React.createElement(View, {\n    style: {\n      paddingHorizontal: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: COLORS.blue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }\n  }) : React.createElement(FlatList, {\n    data: circular,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push('jobDetails', {\n            id: item._id\n          });\n        },\n        style: _objectSpread({\n          flex: 1,\n          flexDirection: 'column',\n          margin: 5,\n          paddingVertical: SIZES.radius,\n          paddingHorizontal: 18,\n          borderRadius: 5,\n          backgroundColor: COLORS.white\n        }, styles.shadow),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 18,\n          color: COLORS.darkgreen\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }\n      }, item.title)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: COLORS.blue,\n          fontSize: 15,\n          fontWeight: '600'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, item.company), React.createElement(AntDesign, {\n        style: {\n          marginLeft: 5\n        },\n        name: \"doubleright\",\n        size: 13,\n        color: COLORS.blue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 13,\n          color: COLORS.yellow\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"Details\")));\n    },\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 3\n  }\n});\nexport default AllCircularScreen;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/AllCircularScreen.js"],"names":["React","useState","useEffect","COLORS","SIZES","AntDesign","circularApi","AllCircularScreen","route","navigation","isLoading","setIsLoading","circular","setCircular","loadCircular","get","data","paddingVertical","backgroundColor","lightBlue","fontSize","color","white","fontWeight","marginLeft","length","paddingHorizontal","blue","item","_id","push","id","flex","flexDirection","margin","radius","borderRadius","styles","shadow","darkgreen","title","alignItems","company","yellow","StyleSheet","create","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport {\r\n    View,\r\n    Text,\r\n    FlatList,\r\n    StyleSheet,\r\n    ActivityIndicator,\r\n    TouchableOpacity\r\n} from 'react-native'\r\nimport {COLORS,SIZES} from '../constants';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nimport circularApi from '../api/baseApi';\r\n\r\nconst AllCircularScreen = ({route,navigation})=>{\r\n\r\n    const [isLoading,setIsLoading] = useState(true);\r\n    const [circular,setCircular] = useState([]);\r\n\r\n    const loadCircular = async()=>{\r\n        const {data} = await circularApi.get('/get-all-circulars');\r\n        setCircular(data);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadCircular();\r\n    },[0])\r\n\r\n\r\n\r\n    return(\r\n        <View>\r\n        <View style={{paddingVertical:6,backgroundColor:COLORS.lightBlue}}>\r\n        <Text style={{fontSize:15,color:COLORS.white,fontWeight:'bold',marginLeft:5}}>Total {circular.length} Jobs</Text>\r\n        </View>\r\n        <View style={{paddingHorizontal:3}}>\r\n            {isLoading?<ActivityIndicator size=\"large\" color={COLORS.blue} /> :\r\n            <FlatList\r\n            data={circular}\r\n            keyExtractor={item=>item._id}\r\n            renderItem={({item})=>{\r\n                return(\r\n                <TouchableOpacity\r\n                onPress={()=> navigation.push('jobDetails',{\r\n                    id:item._id\r\n                })}\r\n                style={{\r\n                    flex: 1,\r\n                    flexDirection: 'column',\r\n                    margin: 5,\r\n                    paddingVertical: SIZES.radius,\r\n                    paddingHorizontal: 18,\r\n                    borderRadius: 5,\r\n                    backgroundColor: COLORS.white,\r\n                    ...styles.shadow\r\n                }}\r\n            >\r\n                <View>\r\n                    <Text\r\n                    style={{fontWeight:'bold',fontSize:18,color:COLORS.darkgreen}}\r\n                    >{item.title}</Text>\r\n                </View>\r\n                <View style={{flexDirection:'row',alignItems:'center'}}>\r\n                    <Text style={{\r\n                        color:COLORS.blue,\r\n                        fontSize:15,\r\n                        fontWeight:'600'\r\n                    }}>{item.company}</Text>\r\n                    <AntDesign style={{marginLeft:5}} name=\"doubleright\" size={13} color={COLORS.blue} />\r\n                    <Text style={{fontSize:13,color:COLORS.yellow}}>Details</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n            )\r\n            }}\r\n            showsHorizontalScrollIndicator={false}\r\n            />}\r\n        </View>\r\n        </View>\r\n    )\r\n    \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 2,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 3,\r\n    }\r\n});\r\n\r\nexport default AllCircularScreen;"]},"metadata":{},"sourceType":"module"}