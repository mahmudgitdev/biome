{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"L:\\\\ReactNative\\\\biome\\\\src\\\\screens\\\\SolutionScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { COLORS } from \"../constants\";\n\nvar SolutionScreen = function SolutionScreen(_ref) {\n  var route = _ref.route;\n  var data = route.params.questions;\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: _objectSpread({\n        flex: 1,\n        flexDirection: 'column',\n        margin: 5,\n        paddingVertical: 15,\n        paddingHorizontal: 18,\n        borderRadius: 5,\n        backgroundColor: COLORS.white\n      }, styles.shadow),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 15,\n        color: COLORS.black\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, item.question), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, React.createElement(FlatList, {\n      data: item.options,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            paddingVertical: 5,\n            alignItems: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: item.isCorrect ? COLORS.darkgreen : 'gray',\n            width: 27,\n            height: 27,\n            borderRadius: 40,\n            marginRight: 6,\n            justifyContent: 'center'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: {\n            alignSelf: 'center',\n            color: 'white'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }\n        }, item.qop)), React.createElement(Text, {\n          style: {\n            fontSize: 15\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }\n        }, item.option));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    })), React.createElement(Text, {\n      style: {\n        color: COLORS.darkgray,\n        fontSize: 13\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, item.describe ? item.describe : '')));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    renderItem: renderItem,\n    numColumns: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.lightGray2,\n    paddingVertical: 5\n  },\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 3\n  }\n});\nexport default SolutionScreen;","map":{"version":3,"sources":["L:/ReactNative/biome/src/screens/SolutionScreen.js"],"names":["React","useState","useEffect","COLORS","SolutionScreen","route","data","params","questions","renderItem","item","flex","flexDirection","margin","paddingVertical","paddingHorizontal","borderRadius","backgroundColor","white","styles","shadow","fontWeight","fontSize","color","black","question","options","_id","alignItems","isCorrect","darkgreen","width","height","marginRight","justifyContent","alignSelf","qop","option","darkgray","describe","container","StyleSheet","create","lightGray2","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport { \r\n    View,\r\n    StyleSheet,\r\n    Text,\r\n    FlatList,\r\n    ActivityIndicator,\r\n\r\n} from 'react-native';\r\nimport {COLORS} from '../constants';\r\n\r\nconst SolutionScreen = ({route})=>{\r\n    const data = route.params.questions\r\n\r\n    const renderItem = ({item})=>{\r\n        return(\r\n            <View>\r\n            <View style={{\r\n                flex: 1,\r\n                flexDirection: 'column',\r\n                margin: 5,\r\n                paddingVertical: 15,\r\n                paddingHorizontal: 18,\r\n                borderRadius: 5,\r\n                backgroundColor: COLORS.white,\r\n                ...styles.shadow\r\n\r\n            }}>\r\n                <Text style={{fontWeight:'bold',fontSize:15,color:COLORS.black}}>{item.question}</Text>\r\n                <View>\r\n                <FlatList \r\n                data={item.options}\r\n                keyExtractor={item=>item._id}\r\n                renderItem={({item})=>{\r\n                    return(\r\n                        <View style={{flexDirection:'row',paddingVertical:5,alignItems:'center'}}>\r\n                            <View style={{\r\n                                backgroundColor:item.isCorrect?COLORS.darkgreen:'gray',\r\n                                width:27,\r\n                                height:27,\r\n                                borderRadius:40,\r\n                                marginRight:6,\r\n                                justifyContent:'center'\r\n                                }}>\r\n                            <Text style={{\r\n                                alignSelf:'center',\r\n                                color:'white',\r\n                            }}>{item.qop}</Text>\r\n                            </View>\r\n                            <Text style={{fontSize:15}}>{item.option}</Text>\r\n                        </View>\r\n                    )\r\n                }}\r\n                />\r\n            </View>\r\n            <Text style={{color:COLORS.darkgray,fontSize:13}}>{item.describe?item.describe:''}</Text>\r\n            </View>\r\n                \r\n        </View>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <FlatList\r\n            data={data}\r\n            keyExtractor={item=>item._id}\r\n            renderItem={renderItem}\r\n            numColumns={1}\r\n            />\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor:COLORS.lightGray2,\r\n        paddingVertical:5\r\n    },\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 2,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 3,\r\n    }\r\n})\r\nexport default SolutionScreen;"]},"metadata":{},"sourceType":"module"}